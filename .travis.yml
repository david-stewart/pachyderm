# xenial is needed for python 3.7
dist: xenial
language: python
sudo: required
_testsScript: &testsScript
    language: python
    # Use cache with pip to save time.
    cache: pip
    install:
        - pip install --upgrade -e .[tests,dev,docs]
    script:
        # Check code quality
        - flake8 .
        # Run the tests
        - pytest -l -vv --cov=pachyderm --cov-branch -m "not ROOT" --durations=5 tests/
        # Check that the docs build successfully
        - pushd docs && make html && popd
        # Skip sending the coverage here because it will be rather low due to skipping the ROOT tests.
        # We will instead send that coverage report.
jobs:
    include:
        # Tests which require ROOT, coverage
        - stage: test
          python: 3.6
          before_script:
              # Build the docker image
              - docker build -t rehlers/pachyderm .
              # So we can see that the have the expected images
              - docker images
          script:
              # Other tests are covered by the test stage, so we just want to test and uplaod coverage here.
              # Setup coverage
              - ci_env=`bash <(curl -s https://codecov.io/env)`
              # Run tests and upload coverage
              # Pachyderm was installed when the image was created above, so we don't need to install it again.
              - docker run $ci_env rehlers/pachyderm /bin/bash -c "pytest -l -vv --cov=pachyderm --cov-branch --durations=5 tests/ && bash <(curl -s https://codecov.io/bash)"
              # We could now push the image to docker hub. However, we don't really need it for anything, so we skip this step for now.
        # Standard tests without ROOT
        # We give these the same name so the tests will run in parallel
        - stage: test
          <<: *testsScript
          python: 3.6
        - stage: test
          <<: *testsScript
          python: 3.7
        - stage: deploy
          python: 3.7
          # Always need a script to make Travis happy, so we just notify.
          script: echo "Deploying to PyPI"
          deploy:
              provider: pypi
              user: rehlers
              password:
                  secure: t6FbjYwztf8r9p/wU9U764qL1dAdiLd0TpztKtxpggGaJRFdZCJP/C1ji7YbIyngsFdID+VocdDFbLKtH1eeW3GoHX2jRh6MGfXO6eiGSz6HHnI2RTiUPJyOBVm3exCnFWO4gGyDy3IvPmoZeX8BEa7L7y8PHXFLXO5i45nZOpCg9iHgMCJr/wGWvvxHU/uvDmKxRvYRfarH1IRyGDUFnU917UBY7Sv0yPITVfEctcnkkoymrDUKCAebIYXrpEBF3vSy8vgrv7LLHy5mOlrNF5hBuXujdef8YCL5SB/MhAeTHiN4mlbXwqutHBNfLHcNpSrmfhJ+D+XofMajikgjgFwQDVDL17889TZXAtymQwep+bjH9lEB1lWTnx0J/cAmJD19dn8oTo6C31UCJ5y3Dvqal36mUmYGqS/j0p6o0k1xxzJM+7eIoQ0OHhMXlk6w13TiPL2oH4QMUvuTpSCW9UK2AJJZkS5zsTo3P+KeyleZ+6WkztfDPuDIyhARD4AEaacmWskQjVM0LKLYoKQ6wvX7a1zg2tQ+DtRde83OYpebFShaImf8KkZ6iOnw4iq1rLln86N7Lgw0WuGzIRPJV1WS1h8VxnfNc78jehcDSUimyQNza/K7X2cSP2U1J6ib6cQNnGyE9e5BIqvLwicscDsCJLG/7Ru+Qi4mlJAOAro=
              distributions: sdist bdist_wheel
              on:
                  tags: true
